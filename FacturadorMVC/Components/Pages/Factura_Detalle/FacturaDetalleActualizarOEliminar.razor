@page "/FacturaDetalleActualizarOEliminar/{IDActualizar:int}"

<h3>FacturaDetalleActualizarOEliminar</h3>

@using FacturadorMVC.Modelos
@rendermode InteractiveServer

<h3>Editar factura Detalle ID: @facturaDetalleEditando.FC_DTL_ID</h3>

<form>

    <div style="display:flex; flex-direction:row; gap:5px;">
        <div>
            <label>Fact_ID:</label>
            <br />
            <input type="number" @bind="facturaDetalleEditando.Fact_ID" />
            <br />
        </div>

        <div>
            <label>Fecha Alta:</label>
            <br />
            <input type="date" @bind="facturaDetalleEditando.FechaAlta" />
            <br />
        </div>

        <div>
            <label>ART_ID:</label>
            <br />
            <input type="text" @bind="facturaDetalleEditando.ART_ID" />
            <br />
        </div>

        <div>
            <label>Cant:</label>
            <br />
            <input type="number" @bind="facturaDetalleEditando.Cant" />
            <br />
        </div>

        <div>
            <label>Precio:</label>
            <br />
            <input type="number" @bind="facturaDetalleEditando.Precio" />
            <br />
        </div>

        <div>
            <label>Moto:</label>
            <br />
            <input type="number" @bind="facturaDetalleEditando.Moto" />
            <br />
        </div>

    </div>

    <br />
    <br />

    <button @onclick="() => ActualizarFacturaDetalle(facturaDetalleEditando.FC_DTL_ID)"> Guardar cambios </button>
    <button @onclick="() => EliminarActualizarFacturaCabecera(facturaDetalleEditando.FC_DTL_ID)"> Eliminar </button>
    <button style="margin-left:10px;"> <a href="/FacturaDetalle"> Cancelar </a> </button>

</form>

<p style="color:orange;">@msj</p>


@code 
{

    [Parameter]
    public int IDActualizar { get; set; }

    Factura_Detalle oFacturaDetalle = new Factura_Detalle();

    Factura_Detalle facturaDetalleEditando = new Factura_Detalle();

    string msj = "";

    protected override async Task OnInitializedAsync()
    {
        await GetFacturaDetalleByID();
    }

    private async Task GetFacturaDetalleByID()
    {
        var url = oFacturaDetalle.URL_GetFactura_DetalleByID(IDActualizar);

        using (HttpClient httpClient = new HttpClient())
        {
            var response = await httpClient.GetAsync(url);

            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();

                var options = new JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    };

                facturaDetalleEditando = JsonSerializer.Deserialize<Factura_Detalle>(content, options);

                StateHasChanged();
            }
        }
    }

    public async Task ActualizarFacturaDetalle(int IDActualizar)
    {
        try
        {
            var url = oFacturaDetalle.URL_ActualizarFactura_Detalle(IDActualizar);

            using (HttpClient httpClient = new HttpClient())
            {
                var json = JsonSerializer.Serialize(facturaDetalleEditando);

                var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");

                var response = await httpClient.PutAsync(url, content);

                if (response.IsSuccessStatusCode)
                {
                    var resultado = await response.Content.ReadAsStringAsync();

                    msj = resultado;
                }
                else
                {
                    var error = await response.Content.ReadAsStringAsync();

                    msj = error;
                }
            }
        }
        catch (Exception ex)
        {

        }
        finally
        {
            StateHasChanged();
        }

    }

    public async Task EliminarActualizarFacturaCabecera(int IDAEliminar)
    {
        try
        {
            var url = oFacturaDetalle.URL_EliminarFactura_Detalle(IDAEliminar);

            using (HttpClient httpclient = new HttpClient())
            {
                var response = await httpclient.DeleteAsync(url);

                if (response.IsSuccessStatusCode)
                {
                    var content = response.Content.ReadAsStringAsync();

                    var msj = content.Result;

                    facturaDetalleEditando = new Factura_Detalle();
                }
            }
        }
        catch (Exception ex)
        {

        }
        finally
        {
            StateHasChanged();
        }

    }


}
